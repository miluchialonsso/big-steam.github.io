#include <Wifi.h>
//-----------------------credenciales de WiFi-----------------------
const char* ssid ="Tenda_1864E8";

const char* password= "FFDJeDG7";

//-----------------------VARIABLES GLOBALES-----------------------

int contconexion = 0;

String header; // Variable para Juardar el HTTP request

String estadoSalida = "off";

const int salida 2;

//-----------------------CODIGO HTML-----------------------

String pagina = "<!DOCTYPE html>"

"<html>"

"<head>"

"<meta charset='utf-8' />"

"<title>Servidor Web ESP32</title>"

"</head>"

"<body>"

"<center>"

"<hl>Servidor Web ESP32</h1>"

"<p><a href='/on'><button style='height:50px;width:100px'>ON</button></a></p>"
"<p><a href='/off'><button style='height:50px;width:100px'>OFF</button></a></p>"
"</center>"
"</body>"
"</html>";

//-----------------------Setup-----------------------
void setup(){
  Serial.begin (115200);
  Serial.println("");

  pinMode(salida, OUTPUT);
  digitalWrite(salida, LOW);

  //Conexion WIFI
  WiFi.begin (ssid, password);
  //Cuenta hasta 50 si no se puede conectar lo cancela
  while (WiFi.status() != WL_CONNECTED and contconexion <50) {
    ++contconexion;
    delay(500);
    Serial.print(".");
  }
  if (contconexion <50){
    //para usar con ip fija
    //IPAddress ip(192,168,1,180);
    //IPAddress gateway (192,168,1,1);
    //IPAddress subnet(255,255,255,0);
    //WiFi.config(ip, gateway, subnet);

    Serial.println("");
    Serial.println("Error de conexion");
  }
}

//-----------------------Loop-----------------------

void loop(){
  WiFiClient client = server.available(); //Escucha a los clientes entrantes

  if (client){                            //Si se conecta un nuevo cliente
    Serial.println("New Client.")         //
    String currentLine = "";              //
    While (client.connected()) {          //loop mientras el cliente esta conectado
      if(client.available()) {            //si hay bytes para leer desde el cliente
        char c = client.read();           //lee un byte
        Serial.write(c);                  //imprime este byte en el monitor serial
        header += c;
        if (c =='\n') {                   //si el byte es un caracter de salto de linea
        //si la linea esta en blanco significa que es el fin del
        //HTTP request del cliente, entonces responde:
        if (currentLine.length() == 0) {
          client.println("HTTP/1.1 200 OK");
          client.println("Content-type:text/html");
          client.println("Connection: close");
          client.println("");

          //enciende y apaga el GPIO
          if (header.indexOf("GET /on") >=0) {
            Serial.println("GPIO on");
            estadoSalida = "on";
            digitalWrite(salida, HIGH);
          } else if (header.indexOf("GET /off") >= 0){
            Serial.println("GPIO off");
            estadoSalida = "off";
            digitalWrite(salida, LOW);
          }
            //Muestra la pagina web
            client.println(pagina);

            //la respuesta HTTP termina con una linea en blanco
            client.printlin();
            break;
            else { // si tenemos una nueva linea limpiamos currentLine
             currentLine = "";
             }
        } else if(c != '\r'){ //si C es distinto al caracter de retorno de carro
            currentLine += c;
            }
        }
      }
      //limpiamos la variable header
      header ="";
      //Cerramos la conexion
      client.stop();
      Serial.println("Client disconnected.");
      Serial.println("");
    }
  }
}